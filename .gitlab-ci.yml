variables:
  MAVEN_REPO: $CI_PROJECT_DIR/.m2
  DOCKER_DRIVER: overlay
  SPRING_PROFILES_ACTIVE: gitlab-ci
  ENV_NAME: $CI_PROJECT_NAME-$GITLAB_USER_ID-$CI_JOB_ID

stages:
  - build
  - package
  - deploy

maven-build:
  image: maven:3-jdk-8
  stage: build
  script: "mvn -Dmaven.repo.local=$MAVEN_REPO package -B"
  cache:
    key: "$CI_BUILD_STAGE"
    paths:
      - node_modules
      - .m2
      - node
  artifacts:
    expire_in: 1 week
    paths:
      - target/*.war

docker-build:
  stage: package
  script:
    - mv target/*.war ROOT.war
    - docker build -t $CI_REGISTRY_IMAGE -f Dockerfile .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE
    - docker logout $CI_REGISTRY
    
jelastic-deploy:
  image: openjdk:8-jre
  stage: deploy
  script: 
  - if [ -z "$J_LOGIN" ]; then echo "J_LOGIN is not specified"; exit 2; fi
  - if [ -z "$J_PASSWORD" ]; then echo "J_PASSWORD is not specified"; exit 2; fi
  - if [ -z "$J_PLATFORM" ]; then echo "J_PLATFORM is not specified"; exit 2; fi  
  - curl -s ftp://ftp.jelastic.com/pub/cli/jelastic-cli-installer.sh | bash
  - echo "jelastic.cli.send_err_confirm=false" >> ~/.config/jelastic/jelastic.properties
  - ~/jelastic/users/authentication/signin --silent true --login $J_LOGIN --password $J_PASSWORD --platformUrl $J_PLATFORM
  - res=$( ~/jelastic/environment/control/getenvinfo --silent --envName $ENV_NAME | { grep -c status || true; } )
  - if [ $res -eq 0 ]; then echo "{\"env\":{\"shortdomain\":\"$ENV_NAME\"}, \"nodes\":[{\"nodeType\":\"docker\",\"nodeGroup\":\"cp\",\"extip\":false,\"count\":1,\"fixedCloudlets\":1,\"flexibleCloudlets\":16,\"docker\":{\"image\":\"${CI_PROJECT_PATH}\",\"registry\":{\"url\":\"${CI_REGISTRY}\",\"user\":\"${CI_REGISTRY_USER}\",\"password\":\"${CI_REGISTRY_PASSWORD}\"}}}]}" > params.json; cat params.json; ~/jelastic/environment/control/createenvironment --silent true --myparams params.json; fi;
  - if [ $res -eq 1 ]; then ~/jelastic/environment/control/redeploycontainersbygroup --silent --envName $ENV_NAME --nodeGroup cp --tag latest --sequential true; fi;
  - ~/jelastic/users/authentication/signout --silent true
  
